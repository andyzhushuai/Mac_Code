#pragma OPENCL EXTENSION cl_amd_printf : enable
__kernel void vecadd(__global const float* A, __global const float* B, __global float* C)
{
	double P3[4][4][4][4][4][4];
	double G1[4][4];
	double Sum = 0.0;
	for(int i=0; i<4; i++)
	{
	   for(int j=0; j<4; j++)
	   {
	      if ((i==j)){if (i!=0)G1[i][j] = -1.0;else G1[i][j] = 0.0;}		//In center of mass frame,p_psi_x,p_psi_y,p_psi_z = 0,so G1[123][123] = -1, G1[0][0] = 0.
	      else G1[i][j] = 0.0;
//cout<<"haha: G1["<<i<<"]"<<"["<<j<<"] = " << G1[i][j] << endl;
	   }
	}
	
	for(int u=0; u<4; u++)
	{
	   for(int v=0; v<4; v++)
	   {
	      for(int lm=0; lm<4; lm++)
	      {
		 for(int up=0; up<4; up++)
		 {
		    for(int vp=0; vp<4; vp++)
		    {
		       for(int lmp=0; lmp<4; lmp++)
		       {
			  P3[u][v][lm][up][vp][lmp] = 0.0; 
//			  Sum = Sum + P3[u][v][lm][up][vp][lmp];
//			  printf("Sum = %f\n",Sum);
//			  cout<<"P3["<<u<<"]["<<v<<"]["<<lm<<"]["<<up<<"]["<<vp<<"]["<<lmp<<"] = "<<P3[u][v][lm][up][vp][lmp]<<endl;
//			  printf("P3[%d][%d][%d][%d][%d][%d] = %f\n",u,v,lm,up,vp,lmp,P3[u][v][lm][up][vp][lmp]);
		       }
		    }
		 }
	      }
	   }
	}

P3[1][1][1][1][1][1] = 0.4;
P3[1][1][1][1][2][2] = -0.2;
P3[1][1][1][1][3][3] = -0.2;
P3[1][1][1][2][1][2] = -0.2;
P3[1][1][1][2][2][1] = -0.2;
P3[1][1][1][3][1][3] = -0.2;
P3[1][1][1][3][3][1] = -0.2;
P3[1][1][2][1][1][2] = 0.266667;
P3[1][1][2][1][2][1] = 0.266667;
P3[1][1][2][2][1][1] = 0.266667;
P3[1][1][2][2][2][2] = -0.2;
P3[1][1][2][2][3][3] = -0.0666667;
P3[1][1][2][3][2][3] = -0.0666667;
P3[1][1][2][3][3][2] = -0.0666667;
P3[1][1][3][1][1][3] = 0.266667;
P3[1][1][3][1][3][1] = 0.266667;
P3[1][1][3][2][2][3] = -0.0666667;
P3[1][1][3][2][3][2] = -0.0666667;
P3[1][1][3][3][1][1] = 0.266667;
P3[1][1][3][3][2][2] = -0.0666667;
P3[1][1][3][3][3][3] = -0.2;
P3[1][2][1][1][1][2] = 0.266667;
P3[1][2][1][1][2][1] = 0.266667;
P3[1][2][1][2][1][1] = 0.266667;
P3[1][2][1][2][2][2] = -0.2;
P3[1][2][1][2][3][3] = -0.0666667;
P3[1][2][1][3][2][3] = -0.0666667;
P3[1][2][1][3][3][2] = -0.0666667;
P3[1][2][2][1][1][1] = -0.2;
P3[1][2][2][1][2][2] = 0.266667;
P3[1][2][2][1][3][3] = -0.0666667;
P3[1][2][2][2][1][2] = 0.266667;
P3[1][2][2][2][2][1] = 0.266667;
P3[1][2][2][3][1][3] = -0.0666667;
P3[1][2][2][3][3][1] = -0.0666667;
P3[1][2][3][1][2][3] = 0.166667;
P3[1][2][3][1][3][2] = 0.166667;
P3[1][2][3][2][1][3] = 0.166667;
P3[1][2][3][2][3][1] = 0.166667;
P3[1][2][3][3][1][2] = 0.166667;
P3[1][2][3][3][2][1] = 0.166667;
P3[1][3][1][1][1][3] = 0.266667;
P3[1][3][1][1][3][1] = 0.266667;
P3[1][3][1][2][2][3] = -0.0666667;
P3[1][3][1][2][3][2] = -0.0666667;
P3[1][3][1][3][1][1] = 0.266667;
P3[1][3][1][3][2][2] = -0.0666667;
P3[1][3][1][3][3][3] = -0.2;
P3[1][3][2][1][2][3] = 0.166667;
P3[1][3][2][1][3][2] = 0.166667;
P3[1][3][2][2][1][3] = 0.166667;
P3[1][3][2][2][3][1] = 0.166667;
P3[1][3][2][3][1][2] = 0.166667;
P3[1][3][2][3][2][1] = 0.166667;
P3[1][3][3][1][1][1] = -0.2;
P3[1][3][3][1][2][2] = -0.0666667;
P3[1][3][3][1][3][3] = 0.266667;
P3[1][3][3][2][1][2] = -0.0666667;
P3[1][3][3][2][2][1] = -0.0666667;
P3[1][3][3][3][1][3] = 0.266667;
P3[1][3][3][3][3][1] = 0.266667;
P3[2][1][1][1][1][2] = 0.266667;
P3[2][1][1][1][2][1] = 0.266667;
P3[2][1][1][2][1][1] = 0.266667;
P3[2][1][1][2][2][2] = -0.2;
P3[2][1][1][2][3][3] = -0.0666667;
P3[2][1][1][3][2][3] = -0.0666667;
P3[2][1][1][3][3][2] = -0.0666667;
P3[2][1][2][1][1][1] = -0.2;
P3[2][1][2][1][2][2] = 0.266667;
P3[2][1][2][1][3][3] = -0.0666667;
P3[2][1][2][2][1][2] = 0.266667;
P3[2][1][2][2][2][1] = 0.266667;
P3[2][1][2][3][1][3] = -0.0666667;
P3[2][1][2][3][3][1] = -0.0666667;
P3[2][1][3][1][2][3] = 0.166667;
P3[2][1][3][1][3][2] = 0.166667;
P3[2][1][3][2][1][3] = 0.166667;
P3[2][1][3][2][3][1] = 0.166667;
P3[2][1][3][3][1][2] = 0.166667;
P3[2][1][3][3][2][1] = 0.166667;
P3[2][2][1][1][1][1] = -0.2;
P3[2][2][1][1][2][2] = 0.266667;
P3[2][2][1][1][3][3] = -0.0666667;
P3[2][2][1][2][1][2] = 0.266667;
P3[2][2][1][2][2][1] = 0.266667;
P3[2][2][1][3][1][3] = -0.0666667;
P3[2][2][1][3][3][1] = -0.0666667;
P3[2][2][2][1][1][2] = -0.2;
P3[2][2][2][1][2][1] = -0.2;
P3[2][2][2][2][1][1] = -0.2;
P3[2][2][2][2][2][2] = 0.4;
P3[2][2][2][2][3][3] = -0.2;
P3[2][2][2][3][2][3] = -0.2;
P3[2][2][2][3][3][2] = -0.2;
P3[2][2][3][1][1][3] = -0.0666667;
P3[2][2][3][1][3][1] = -0.0666667;
P3[2][2][3][2][2][3] = 0.266667;
P3[2][2][3][2][3][2] = 0.266667;
P3[2][2][3][3][1][1] = -0.0666667;
P3[2][2][3][3][2][2] = 0.266667;
P3[2][2][3][3][3][3] = -0.2;
P3[2][3][1][1][2][3] = 0.166667;
P3[2][3][1][1][3][2] = 0.166667;
P3[2][3][1][2][1][3] = 0.166667;
P3[2][3][1][2][3][1] = 0.166667;
P3[2][3][1][3][1][2] = 0.166667;
P3[2][3][1][3][2][1] = 0.166667;
P3[2][3][2][1][1][3] = -0.0666667;
P3[2][3][2][1][3][1] = -0.0666667;
P3[2][3][2][2][2][3] = 0.266667;
P3[2][3][2][2][3][2] = 0.266667;
P3[2][3][2][3][1][1] = -0.0666667;
P3[2][3][2][3][2][2] = 0.266667;
P3[2][3][2][3][3][3] = -0.2;
P3[2][3][3][1][1][2] = -0.0666667;
P3[2][3][3][1][2][1] = -0.0666667;
P3[2][3][3][2][1][1] = -0.0666667;
P3[2][3][3][2][2][2] = -0.2;
P3[2][3][3][2][3][3] = 0.266667;
P3[2][3][3][3][2][3] = 0.266667;
P3[2][3][3][3][3][2] = 0.266667;
P3[3][1][1][1][1][3] = 0.266667;
P3[3][1][1][1][3][1] = 0.266667;
P3[3][1][1][2][2][3] = -0.0666667;
P3[3][1][1][2][3][2] = -0.0666667;
P3[3][1][1][3][1][1] = 0.266667;
P3[3][1][1][3][2][2] = -0.0666667;
P3[3][1][1][3][3][3] = -0.2;
P3[3][1][2][1][2][3] = 0.166667;
P3[3][1][2][1][3][2] = 0.166667;
P3[3][1][2][2][1][3] = 0.166667;
P3[3][1][2][2][3][1] = 0.166667;
P3[3][1][2][3][1][2] = 0.166667;
P3[3][1][2][3][2][1] = 0.166667;
P3[3][1][3][1][1][1] = -0.2;
P3[3][1][3][1][2][2] = -0.0666667;
P3[3][1][3][1][3][3] = 0.266667;
P3[3][1][3][2][1][2] = -0.0666667;
P3[3][1][3][2][2][1] = -0.0666667;
P3[3][1][3][3][1][3] = 0.266667;
P3[3][1][3][3][3][1] = 0.266667;
P3[3][2][1][1][2][3] = 0.166667;
P3[3][2][1][1][3][2] = 0.166667;
P3[3][2][1][2][1][3] = 0.166667;
P3[3][2][1][2][3][1] = 0.166667;
P3[3][2][1][3][1][2] = 0.166667;
P3[3][2][1][3][2][1] = 0.166667;
P3[3][2][2][1][1][3] = -0.0666667;
P3[3][2][2][1][3][1] = -0.0666667;
P3[3][2][2][2][2][3] = 0.266667;
P3[3][2][2][2][3][2] = 0.266667;
P3[3][2][2][3][1][1] = -0.0666667;
P3[3][2][2][3][2][2] = 0.266667;
P3[3][2][2][3][3][3] = -0.2;
P3[3][2][3][1][1][2] = -0.0666667;
P3[3][2][3][1][2][1] = -0.0666667;
P3[3][2][3][2][1][1] = -0.0666667;
P3[3][2][3][2][2][2] = -0.2;
P3[3][2][3][2][3][3] = 0.266667;
P3[3][2][3][3][2][3] = 0.266667;
P3[3][2][3][3][3][2] = 0.266667;
P3[3][3][1][1][1][1] = -0.2;
P3[3][3][1][1][2][2] = -0.0666667;
P3[3][3][1][1][3][3] = 0.266667;
P3[3][3][1][2][1][2] = -0.0666667;
P3[3][3][1][2][2][1] = -0.0666667;
P3[3][3][1][3][1][3] = 0.266667;
P3[3][3][1][3][3][1] = 0.266667;
P3[3][3][2][1][1][2] = -0.0666667;
P3[3][3][2][1][2][1] = -0.0666667;
P3[3][3][2][2][1][1] = -0.0666667;
P3[3][3][2][2][2][2] = -0.2;
P3[3][3][2][2][3][3] = 0.266667;
P3[3][3][2][3][2][3] = 0.266667;
P3[3][3][2][3][3][2] = 0.266667;
P3[3][3][3][1][1][3] = -0.2;
P3[3][3][3][1][3][1] = -0.2;
P3[3][3][3][2][2][3] = -0.2;
P3[3][3][3][2][3][2] = -0.2;
P3[3][3][3][3][1][1] = -0.2;
P3[3][3][3][3][2][2] = -0.2;
P3[3][3][3][3][3][3] = 0.4;
	for(int u=0; u<4; u++)
	{
	   for(int v=0; v<4; v++)
	   {
	      for(int lm=0; lm<4; lm++)
	      {
		 for(int up=0; up<4; up++)
		 {
		    for(int vp=0; vp<4; vp++)
		    {
		       for(int lmp=0; lmp<4; lmp++)
		       {
//			  P3[u][v][lm][up][vp][lmp] = 0.0; 
//			  Sum = Sum + P3[u][v][lm][up][vp][lmp];
//			  printf("Sum = %f\n",Sum);
//			  cout<<"P3["<<u<<"]["<<v<<"]["<<lm<<"]["<<up<<"]["<<vp<<"]["<<lmp<<"] = "<<P3[u][v][lm][up][vp][lmp]<<endl;
			  printf("P3[%d][%d][%d][%d][%d][%d] = %f\n",u,v,lm,up,vp,lmp,P3[u][v][lm][up][vp][lmp]);
		       }
		    }
		 }
	      }
	   }
	}
//			  printf("Sum = %f\n",Sum);

	int id = get_global_id(0);
	C[id] = A[id] + B[id];
}
