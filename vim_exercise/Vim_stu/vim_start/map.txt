*Map*
------------------------------------------------
对于每天面对整屏整屏的代码、需要成天coding的码农来说，提高效率是十分重要的，而
快捷键便是其中一个重要的手段。

在前面的|Basic-Edit|中提到过，对于系统的复制粘帖指令，因为输入序列较长，可以自
定义快捷键将操作序列映射为单个按键。要实现该映射，输入的命令如下: >

    :map <F3> "+y
    :map <F4> "+p

这样的设置，即将复制操作定义为了<F3>键，而粘帖操作定义为了<F4>键。

再例如，在C中经常要注释掉一行代码或者取消行注释。 这当然可以通过I//以及^xx来实
现，不过每次都需要输入不是很麻烦吗？输入如下命令: >

    :map <F11> I//
    :map <F12> ^xx
    :imap <F11> <esc>I//
    :imap <F12> <esc>^xx

便将<F11>定义为了行注释的快捷键，而<F12>定义为了去掉行注释的快捷键了。

那么命令中的imap是什么意思呢。imap表示定义在插入模式下的键映射。 即map所映射的
快捷键只能在普通模式下识别，而imap定义的快捷键则适用于插入模式。即然是插入模式
下，因此该操作序列就需要先执行<esc>操作，回到普通模式下后再执行行注释。 这样的
话进行行注释就可以不用管当下处于什么模式下，直接按下<F11>即可。除了map、imap，
Vim还提供了vmap, xmap等等。

键映射还可以有着十分复杂的设置，比如执行条件判断等等。如果读者有兴趣，可以尝试
实现一下如何进行块注释(/* */)。
